"eval_metric" = "mlogloss", # 損失関数の設定
"num_class" = 3 # class がいくつ存在するのか
)
k<-round(1+log2(nrow(train.x)))
k
cv.nround <- 100
bst.cv <- xgb.cv(param=param, data = x[trind,], label = y,  nfold = k, nrounds=cv.nround)
set.seed(131)
nround <- 27
bst <- xgboost(param=param, data = x[trind,], label = y, nrounds=nround)
pred <- predict(bst,x[teind,]) # モデルを使って予測値を算出
pred <- matrix(pred,3,length(pred)/3) # 今回は3クラスあるので
pred
pred <- t(pred)
colnames(pred)<-c("setosa","versicolor","virginica")
pred
library(Rcmdr)
library(wbstats)
library(data.table)
library(googleVis)
myDT <- data.table(
wb(indicator = c("SP.POP.TOTL",
"SP.DYN.LE00.In",
"SP.DYN.TFRT.IN"), mrv=60)
myDT <- data.table(
wb(indicator = c("SP.POP.TOTL",
"SP.DYN.LE00.In",
"SP.DYN.TFRT.IN"), mrv=60)
)
myDT <- data.table(
wb(indicator = c("SP.POP.TOTL",
"SP.DYN.LE00.IN",
"SP.DYN.TFRT.IN"), mrv=60)
)
countries <- data.table(wbcountries())
setkey(myDT, iso2c)
setkey(countries, iso2c)
class(countries)
colnames(countries)
head(countries)
class(myDT)
head(myDT)
myDT <- countries[myDT][! region %in% "Aggregates"]
head(myDT)
wDT <- reshape(
myDT[, list(
country, region, date, value, indicator)],
v.names = "value",
idvar=c("date", "country", "region"),
timevar="indicator", direction = "wide")
class(wDT)
head(wDT)
wDT[, date := as.integer(date)]
setnames(wDT, names(wDT),
c("Country", "Region",
"Year", "Population",
"Fertility", "LifeExpectancy"))
M <- gvisMotionChart(wDT, idvar = "Country",
timevar = "Year",
xvar = "LifeExpectancy",
yvar = "Fertility",
sizevar = "Population",
colorvar = "Region")
plot(M)
install.packages("RMeCab", repos = "http://rmecab.jp/R")
library(RMeCab)
RMeCabC("すももももももももである")
RMeCabDF(file="in.txt")
RMeCabDF("in.txt")
RMeCabText(file="in.txt")
library(RMeCab)
RMeCabC("私は西山です")
library(RMeCab)
RMeCabC("私は西山です")
RMeCabC("すももももももももという")
RMeCabText(file="in.txt")
ls()
getwd()
data0 <- read.csv(file=file.choose())
dim(data0)
head(data0)
syouhi <- data0$syouhi
plot(syouhi)
syouhi <- ts(syouhi,freq=12,start=c(2010,1))
plot(syouhi)
log.syouhi <- log(syouhi)
plot(log.syouhi)
diff(log,syouhi,12)
diff(log.syouhi,12)
ROC(syouhi)
dlog.syouhi <- diff(log.syouhi,12)
dlog.syouhi
log.syouhi
plot(dlog.syouhi)
nobi <- dlog.syouhi*100
plot(nobi)
nobi.sub <- window(nobi,end=c(2014,8))
plot(nobi.sub)
points(nobi[c(2,14,9)],col=2)
nobi[c(2014,9)]
nobi
nobi['2014-9']
heikin.sub <- mean(nobi.sub)
kekka1 <- ar(nobi.sub,order.max=1,aic=F)
kekka1
kekka2 <- ar(nobi.sub,order.max=2,aic=F)
kekka2
heikin.sub
predict(kekka2,n.ahead=1)
kekka.best <- ar(nobi.sub,order.max=12)
kekka.best
predict(kekka.best,n.ahead=1)
abline(h=heikin.sub)
lab.plot(nobi.sub,1,do.lines=F)
lag.plot(nobi.sub,1,do.lines=F)
lag.plot(nobi.sub,2,do.lines=F)
names(kekka2)
plot(kekka2$resid)
abline(h=0,lty=2)
predict(kekka2)
kekka2$resid
fitted(kekka2)
fitted.values(kekka2)
plot(kekka2)
pred <- nobi.sub-kekka2$resid
pred
ts.plot(nobi.sub,pred,lty=c(1,2),col=c(1,2))
data1 <- read.csv(file=file.choose())
dim(data1)
head(data1)
pas <- ts(data1$x,freq=12,start=c(1949,1))
plot(pas)
data2 <- read.csv(file=file.choose())
dim(data2)
head(data2)
elec <- ts(data2$elec,freq=12,start=c(1956,1))
plot(elec)
lag.plot(elec,1,do.lines=F)
plot(diff(log(elec),12))
dlog.elec <- diff(log(elec),12)
lag.plot(dlog.elec)
lag.plot(diff(dlog.elec))
plot(dlog.elec)
plot(diff(dlog.elec))
data0 <- read.csv(file=file.choose())
head(data0)
data0 <- read.csv(file=file.choose())
head(data0)
fvol <- data0[,3]
plot(fvol)
fvol <- ts(fvol)
plot(fvol)
fvol
sort(fvol)
sort(data0[,3])
View(varp)
install.packages("Quandl")
dir()
data0 <- read.csv(file="OECD-MEICLI-20161113.csv",skip=1)
dim(data0)
head(data0)
colnames(data0)
data0 <- read.csv(file="OECD-MEICLI-20161113.csv",skip=1,header=F)
colnames(data0)
head(data0)
library(dplyr)
data0 %>% filter(V3=="JPN"|V3=="USA") %>% select(V1,V3,V7,V15)
data0 %>% filter((V3=="JPN"|V3=="USA") & V1=="LOLITOTR_STSA") %>% select(V1,V3,V7,V15)
usjp <- data0 %>% filter((V3=="JPN"|V3=="USA") & V1=="LOLITOTR_STSA") %>% select(V1,V3,V7,V15)
usjp
as.Date(usjp$V7)
sapply(usjp,class)
as.Date(usjp$V7,format="%Y-%m")
usjp$V7 <- as.character(usjp$V7)
sapply(usjp,class)
usjp
usjp <- usjp[,2:4]
colnames(usjp) <- c("Country","Time","Value")
library(ggplot2)
ggplot(usjp,aes(x=Time,y=Value,colour=Country))+geom_line()
usjp
sapply(usjp,class)
ggplot(usjp,aes(x=Time,y=Value))+geom_line()
dir()
data0 <- read.csv(file="OECD-MEICLI-20161113.csv",skip=1,header=F)
colnames(data0)
head(data0,3)
library(dplyr)
library(zoo)
library(xts)
jpus <- data0 %>% filter(V3=="JPN"|V3=="USA")
as.xts(jpus)
as.zoo(jpus)
jpus <- as.zoo(jpus)
jpus.xts <- as.xts(jpus)
jpus
jpus <- data.frame(jpus[,7],jpus[,-7])
head(jpus)
jpus <- as.xts(as.zoo(jpus))
time <- jpus$V7
time()
time
jpus$V7
ls()
rm(jpus)
colnames(data0)
head(data0)
data1 <- data0 %>% filter(V3=="JPN"|V3=="USA")
head(data1)
jikan <- data1$V17
jikan
jikan <- data1$V7
jikan
jikan <- as.character(jikan)
jikan
strptime(jikan,"%Y-%m")
gsub("([0-9]+)-([0-9]+)", "\\1/\\2/1", jikan)
jikan <- gsub("([0-9]+)-([0-9]+)", "\\1/\\2/1", jikan)
as.Date(jikan)
data1$jikan <- as.Date(jikan)
head(jikan)
head(data1)
data2 <- data1 %>% select(jikan,V3,Value)
data2 <- data1 %>% select(jikan,V3,V15)
head(data2)
search()
library(ggplot2)
ggplot(data2,aes(x=jikan,y=V15,colour=V3))+geom_line()
unique(data2$V1)
head(data2)
head(data1)
unique(data1$V1)
data2 <- data1 %>% filter(V1=="LOLITOTR_STSA")
head(data2)
ggplot(data2,aes(x=jikan,y=V15,colour=V3))+geom_line()
rnorm(5,mean=170,sd=10)
varp(rnorm(5,mean=170,sd=10))
replicate(1000,varp(rnorm(5,mean=170,sd=10))) -> jikken1
replicate(1000,var(rnorm(5,mean=170,sd=10))) -> jikken2
hist(jikken1,br="FD")
hist(jikken2,br="FD")
mean(jikken1); var(jikken1)
mean(jikken2); var(jikken2)
par(mfrow=c(2,1))
hist(jikken1,br="FD",xlim=c(0,600))
hist(jikken2,br="FD",xlim=c(0,600))
rnorm(6,mean=170,sd=10)
var(rnorm(6,mean=170,sd=10))
jikken <- replicate(10000,var(rnorm(6,mean=170,sd=10)))
hist(jikken,br="FD")
mean(jikken); var(jikken)
par(mfrow=c(1,1))
hist(jikken,br="FD")
abline(v=144,lwd=3,col="grey")
sum(jikken > 144)
1-pchisq(7.2,df=5)
rnorm(10,mean=168,sd=10)
var(rnorm(10,mean=168,sd=10))
jikken <- replicate(10000,var(rnorm(10,mean=168,sd=10)))
hist(jikken)
mean(jikken)
var(jikken)
sample(5,c(-10,10),rep=T)
sample(c(-10,10),5,rep=T)
sample(c(-10,10),5,rep=T)
sample(c(-10,10),5,rep=T)
sample(c(-10,10),5,rep=T)
sum(sample(c(-10,10),5,rep=T))
sum(sample(c(-10,10),5,rep=T))
jikken <- replicate(10000,sum(sample(c(-10,10),100,rep=T)))
hist(jikken)
sum(jikken >= 200)/10000
var(jikken)
sd(jikken)
jikken400 <- replicate(10000,sum(sample(c(-10,10),400,rep=T)))
hist(jikken400)
sd(jikken)
sd(jikken400)
sum(jikken400 >= 200)/10000
rnorm(9,mean=55,sd=18)
mean(rnorm(9,mean=55,sd=18))
jikken <- replicate(10000,mean(rnorm(9,mean=55,sd=18)))
hist(jikken)
mean(jikken); sd(jikken)
max(jikken)
sum(jikken > 73)/10000
sum((jikken >= 49) & (jikken <= 61))/10000
rnorm(10,mean=168,sd=10)
var(rnorm(10,mean=168,sd=10))
jikken <- replicate(10000,var(rnorm(10,mean=168,sd=10)))
hist(jikken)
mean(jikken); var(jikken)
install.packages("MTS")
rnorm(5,mean=714.8,sd=7.2)
mean(rnorm(5,mean=714.8,sd=7.2))
jikken <- replicate(10000,mean(rnorm(5,mean=714.8,sd=7.2)))
hist(jikken,br="FD")
jikken <- replicate(10000,mean(rnorm(5,mean=710,sd=7.2)))
hist(jikken,br="FD")
install.packages("rstan")
Sys.getenv('PATH')
system('g++ -v')
system('where make')
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
install.packages("BH",dep=T)
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
install.packages("C:/Users/nisiy/Downloads/BH_1.62.0-1.zip", repos = NULL, type = "win.binary")
install.packages("BH")
dir()
library(rstan)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
print(fit)
plot(fit)
pairs(fit, pars = c("mu", "tau", "lp__"))
la <- extract(fit, permuted = TRUE) # arraysのlistを返す
mu <- la$mu
a <- extract(fit, permuted = FALSE)
a2 <- as.array(fit)
m <- as.matrix(fit)
print(fit, digits = 1)
dir()
install.packages("ggfortify")
data("AirPassengers")
library(ggfortify)
autoplot(AirPassengers)
class(AirPassengers)
autoplot(AirPassengers,ts.colour='red',ts.linetype = 'dashed')
install.packages("vars")
library(strucchange)
data("Nile")
ls()
plot(Nile)
autoplot(breakpoints(Nile~1),ts.colour='blue',ts.linetype='dashed',cpt.colour='blue',cpt.linetype='solid')
install.packages("changepoint")
install.packages("rstan",dep=T)
library(rstan)
getwd()
system('g++ -v')
install.packages("ggmcmc")
dir()
getwd()
data0 <- read.csv(file="data-salary.txt")
head(data0)
summary(lm(Y~X,data=data0))
library(rstan)
rdata <- list(N=nrow(data0),X=data0$X,Y=data0$Y)
rdata
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
save.image(file="kekka_model4_5.RData")
dir()
fit
plot(fit)
write.table(data.frame(summary(fit)$summary),file="fit-summary.txt",sep="\t",quote=F,col.names=NA)
dir()
library(ggmcmc)
ggmcmc(ggs(fit,inc_warmup=T,stan_include_auxiliar = T),file="fit_traceplot.pdf",plot="traceplot")
ggmcmc(ggs(fit),file="fit_ggmcmc.pdf",plot=c("traceplot","density","running","autocorrelation"))
x <- c(3,3,3)
y <- c(1,2,4)
x <- c(3,3,3,3)
y <- c(1,3,5,7)
x == y
x
y
data.frame(x,y)
x == y
x > y
x >= y
x != y
(y >2) & (y < 7)
(y < 2) | (y > 5)
install.packages("forecast")
install.packages("dplyr")
install.packages("BH")
install.packages("C:/Users/nisiy/Desktop/BH_1.62.0-1.zip", repos = NULL)
mtcars
set.seed(42)
ggplot(mtcars) +
geom_point(aes(wt, mpg), color = 'red') +
geom_text_repel(
aes(
wt, mpg,
color = factor(cyl),
label = rownames(mtcars)
),
size = 5,
fontface = 'bold',
segment.color = 'red',
box.padding = unit(0.3, 'lines'),
force = 2,
max.iter = 1e4,
expand = TRUE
) +
scale_color_discrete(name = 'cyl') +
theme_classic(base_size = 16)
install.packages("ggrepel")
library(ggplot2)
library(ggrepel)
set.seed(42)
ggplot(mtcars) +
geom_point(aes(wt, mpg), color = 'red') +
geom_text_repel(
aes(
wt, mpg,
color = factor(cyl),
label = rownames(mtcars)
),
size = 5,
fontface = 'bold',
segment.color = 'red',
box.padding = unit(0.3, 'lines'),
force = 2,
max.iter = 1e4,
expand = TRUE
) +
scale_color_discrete(name = 'cyl') +
theme_classic(base_size = 16)
p <- ggplot(mtcars,
aes(wt, mpg, label = rownames(mtcars), colour = factor(cyl))) +
geom_point()
p + geom_text_repel()
p + geom_label_repel()
p + geom_text_repel(aes(alpha=wt,size=mpg))
mtcars$label <- rownames(mtcars)
mtcars$label[1:15] <- ""
p + geom_text_repel(data = mtcars, aes(wt,mpg,label=label))
setwd("C:/Users/nisiy/Dropbox/1.Rmarkdown-Documentation/Forecast-Lecture/forecast-m7-2015")
dir()
library(forecast)
data0 <- read.csv(file="Car-Japan-1993Q1-2015Q2.csv")
head(data0)
sale <- ts(data0$sale,freq=4,start=c(1993,1))
crisis <- ts(data0$crisis,freq=4,start=c(1993,1))
crisis
train <- window(sale,end=c(2008,2))
test <- window(sale,start=c(2008,3),end=c(2010,2))
kekka0 <- auto.arima(train)
yosoku0 <- forecast(kekka0,h=8)
bnd <- range(test,yosoku0$mean) # 上限、下限を求めておく
plot(yosoku0,ylim=bnd)
lines(test,col="red")
eikyou <- test-yosoku0$mean
eikyou
sum(eikyou)
train.sale <- window(sale,end=c(2009,2))
test.sale <- window(sale,start=c(2009,3),end=c(2010,2))
train.crisis <- window(crisis,end=c(2009,2))
test.crisis <- window(crisis,start=c(2009,3),end=c(2010,2))
kekka1 <- auto.arima(train.sale,xreg=train.crisis)
kekka1
yosoku1 <- forecast(kekka1,h=4,xreg=test.crisis)
test.crisis
plot(yosoku1)
names(yosoku1)　# 計算結果一覧を表示
lines(yosoku1$fitted,lty=2)
points(test.sale,pch=20,col="red")
new.test.crisis <- rep(1,4)　# １を4個ならべる
new.test.crisis <- ts(new.test.crisis,freq=4,start=c(2009,3)) # 4個の1に日付をつける
new.test.crisis
yosoku1.new <- forecast(kekka1,h=4,xreg=new.test.crisis)
plot(yosoku1.new)
points(test.sale,pch=20,col="red")
data1 <- read.csv(file="Car-Japan-1993Q1-2015Q2-another.csv")
head(data1)
lehman
sale <- ts(data1$sale,freq=4,start=c(1993,1))
lehman <- ts(data1$lehman,freq=4,start=c(1993,1))
quake <- ts(data1$quake,freq=4,start=c(1993,1))
lehman
quake
sale.mae <- window(sale,end=c(2010,4))
sale.ato <- window(sale,start=c(2011,1),end=c(2011,4))
lehman.mae <- window(lehman,end=c(2010,4))
lehman.ato <- window(lehman,start=c(2011,1),end=c(2011,4))
model.mae <- auto.arima(sale.mae,xreg=lehman.mae)
yosoku.ato <- forecast(model.mae,xreg=lehman.ato)
plot(yosoku.ato)
points(sale.ato,pch=17,col="red")
sale.ato-yosoku.ato$mean
sum(sale.ato-yosoku.ato$mean)
sale.train <- window(sale,end=c(2011,4))
lehman.train <- window(lehman,end=c(2011,4))
quake.train <- window(quake,end=c(2011,4))
sale.test <- window(sale,start=c(2012,1),end=c(2012,4))
lehman.test <- window(lehman,start=c(2012,1),end=c(2012,4))
quake.test <- window(quake,start=c(2012,1),end=c(2012,4))
kekka2nd <- auto.arima(sale.train,xreg=data.frame(lehman=lehman.train,quake=quake.train))
yosoku2nd <- forecast(kekka2nd,xreg=data.frame(lehman=lehman.test,quake=quake.test))
plot(yosoku2nd)
points(window(sale,start=c(2012,1),end=c(2012,4)),pch=17,col="red")
kekka2nd
window(quake,start=c(2011,1),end=c(2011,4)) <- c(0,1,0,0)
quake.train <- window(quake,end=c(2011,4))
quake.test <- window(quake,start=c(2012,1),end=c(2012,4))
quake.train
