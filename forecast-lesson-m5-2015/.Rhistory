x <- rnorm(1000); y <- rnorm(1000)
plot(x,y,pch=".")
z <- arima.sim(list(order=c(1,1,0),ar=0.7),n=200)
plot(z)
acf(diff(z))
pacf(diff(z))
arima(z,order=c(1,1,0))
z1 <- z+0.5
plot(z1)
arima(z,order=c(1,1,0))
arima(z,order=c(1,1,0),include.mean=T)
load("~/Dropbox/将来予測-2014/TodaysData/M4/FiveSeries.RData")
ls()
plot(data.ima)
acf(diff(data.ima))
pacf(diff(data.ima))
library(forecast)
install.packages("forecast")
library(forecast)
auto.arima(data.ima)
Arima(data.ima,order=c(0,1,1))
help(auto.arima)
auto.arima(data.ima,step=F)
auto.arima(data.ima,ic="aic",step=F)
plot(data.ima)
par(mfrow=c(2,1))
acf(data.ima)
par(mfrow=c(2,1))
acf(data.ima)
par()
acf(data.ima)
load("~/Dropbox/将来予測-2014/SampleData/Sales-Advertising.RData")
ls()
plot(adv,sales,pch=16,col=2)
plot(adv,sales,pch=16,col=2,do.lines=F)
plot(adv,sales,pch=16,col=2,type="p")
adv
cbind(adv,sales)
plot(cbind(adv,sales))
plot(data.frame(adv,sales))
ls()
data0
plot(data0)
getwd()
load(file.choose())
ls()
plot(arima011)
acf(arima011)
acf(diff(arima011)
)
pacf(diff(arima011))
ls()
library(forecast)
tau <- max(rnorm(100))
tau
tau <- replicate(max(rnorm(100)),10000)
length(tau)
tau
tau <- replicate(max(rnorm(100)),10)
tau
help(replicate)
tau <- replicate(100,max(rnorm(100)))
tau
tau <- replicate(10000,max(rnorm(100)))
length(tau)
hist(tau,br="FD")
head(sort(tau))
sort(tau)[0.95*10000]
sum(tau>=3)
sum(tau>=3)/10000
ls()
150*15/60
library("colorspace", lib.loc="~/Library/R/3.1/library")
detach("package:colorspace", unload=TRUE)
system.info("g++ -version")
Sys.info("g++ -version")
Sys.info("g++ --version")
68/(1.68^2)
60/(1.68^2)
57/(1.68^2)
24*365*300
3*365*100
install.packages("som")
library(som)
detach("Package:som",unload=T)
detach("Packages:som",unload=T)
detach("packages:som",unload=T)
detach("package:som",unload=T)
install.packages("party")
install.packages("partykit")
titan <- read.csv(file=file.choose())
help(options)
options(encoding="shift-jis")
titan <- read.csv(file=file.choose())
head(titan)
library(rpart)
tr0 <- rpart(生死~.,data=titan,method="class")
plot(tr0,uiform=T,margin=0.1)
plot(tr0,uniform=T,margin=0.1)
plot(tr0,uniform=T,margin=0.1)
text(tr0,use.n=T,all=T,cex=0.8)
library(partykit)
plot(as.party(tr0),tp.args=list(id=F))
titan1 <- read.csv(file=file.choose())
colnames(titan)
head(titan)
data(titanic)
help.start()
help.start()
data(Titanic)
dim(Titanic)
head(Titanic)
ls()
help.start()
install.packages("gsl")
help.start()
x<-rnorm(100)
y <- rnorm(50)
range(c(x,y))
summary(x)
summary(y)
range(x,y)
range(x,y)*1.1
round(range(x,y)*1.1,0)
data0 <- read.csv(file=file.choose())
data0 <- read.csv(file=file.choose(),fileEncoding="cp932")
data0
data1 <- read.csv(file=file.choose(),fileEncoding="Shift-Jis")
data1
install.packages("lavaan")
install.packages("lavaan.survey")
data- <- read.csv(file=file.choose())
data0 <- read.csv(file=file.choose())
data0
sapply(data0,class)
library(dplyr)
library(reshape2)
data0 %>% group_by(colour) %>% summarise(avgPrice=mean(price),avgCar=mean(carat))
data0 %>% group_by(colour) %>% summarise(avgPrice=mean(price),avgCarat=mean(carat),avgRatio=mean(avgPrice/avgCorat))
data0 %>% group_by(colour) %>% summarise(avgPrice=mean(price),avgCarat=mean(carat),avgRatio=mean(avgPrice/avgCarat))
data0 %>% group_by(clarity) %>% summarise(avgPrice=mean(price),avgCarat=mean(carat),avgRatio=mean(avgPrice/avgCorat))
data0 %>% group_by(clarity) %>% summarise(avgPrice=mean(price),avgCarat=mean(carat),avgRatio=mean(avgPrice/avgCarat))
barplot(data0$colour)
barplot(table(data0$colour))
library(ggplot2)
p <- ggplot(data0,aes(x=carat,y=price,col=colour))+geom_point()
p
p+geom_point(shape=certification)
p <- ggplot(data0,aes(x=carat,y=price,col=colour,shape=certification))+geom_point()
p
sqrt(0.5*0.5/500)
l <- list(a=1,b=2,c=3)
l
c(l)
do.call(c,l)
class(do.call(c,l))
2500*0.0365
install.packages("conjoint")
library(conjoint)
data(herbata)
print(hprof)
ls()
ls()
data(tea)
print(tprof)
q()
1.2^5
1.2^10
x <- rnorm(100); y <- rnorm(100)
cx <- cumsum(x); cy <- cumsum(y)
cx <- ts(cx); cy <- ts(cy)
ts.plot(cx,cy,col=c(1,2))
plot(x,y)
library(plyr)
data(iris)
colnames(iris)
ddply(iris,"Species",summarize,Petal.Length_mean=mean(Petal.Length))
setwd("~/Dropbox/Rmarkdown/forecast-lesson-m5-2015")
dir()
