.rs.enableRStudioConnectUI(TRUE)
library("yaml", lib.loc="~/R/win-library/3.3")
install.packages(c("acepack", "colorspace", "curl", "effects", "evaluate", "forecast", "forecastHybrid", "jsonlite", "manipulate", "quantmod", "R6", "Rcmdr", "RcppArmadillo", "reshape2", "rmarkdown", "shiny", "stringi"))
install.packages("yaml")
plot(cars)
iris %>% group_by(Species) %>% summarise(avgPetalWIdth=mean(Petal.Width))
iris %>% group_by(Species) %>% summarise(avgPetalWIdth=mean(Petal.Width))
library(magrittr)
iris %>% group_by(Species) %>% summarise(avgPetalWIdth=mean(Petal.Width))
iris %>%
group_by(Species) %>%
summarise(avgPetalWIdth=mean(Petal.Width))
library(dplyr)
data("iris")
iris %>% group_by(Species) %>% summarise(avgPetalLength=mean(Petal.Width),avgPetalLength=mean(Petal.Length))
library(magrittr)
head(iris)
iris %>% group_by(Species) %>% summarize(avgPetalWidth=mean(Petal.Width))
iris %>% group_by(Species) %>% summarize(avgPetalWidth=mean(Petal.Width))
plot(cars)
library(dplyr)
library(magrittr)
data(iris)
head(iris)
plot(cars)
library(dplyr)
data(iris)
head(iris)
iris %>% dplyr::group_by(Species) %>% dplyr::summarize(avgPetalWidth=mean(Petal.Width))
detach("dplyr",unload=T)
detach("package:dplyr",unload=T)
library(dplyr)
dir()
dir)
dir()
library(knitr)
dir()
knit2html("TesGoogleViz.Rmd,",encoding="UTF8")
dir()
dir()
knit2html("TestGoogleViz.Rmd",encoding="UTF8")
knit2html("TestGoogleViz.Rmd",encoding="UTF8")
library(googleVis)
library(ggplot2)
data(mpg)
head(mpg)
summary(mpg)
cut(mpg$hwy,10:45:5)
cut(mpg$hwy,10:45)
cut(mpg$hwy,10:45:5)
cut(mpg$hwy,seq(10,45,5))
dim(mpg)
library(googleVis)
d <- data.frame(table(cut(ggplot2::mpg,seq(10,45,5))))
d <- data.frame(table(cut(ggplot2::mpg$hwy,seq(10,45,5))))
head(d)
knit2html("TestGoogleViz.Rmd")
knit2html("TestGoogleViz.Rmd",encoding="UTF8")
rmarkdown::render("TestGoogleViz.Rmd",encoding="UTF8")
rmarkdown::render("TestGoogleViz.Rmd",encoding="UTF8")
browseURL("TestGoogleViz.html")
browseURL("TestGoogleViz.html")
install.packages("tables")
library(tables)
data("iris")
class(iris)
head(iris)
iris1 <- iris[,c(1,2,5)]
head(iris1)
tabular((Species) ~ All(iris1) * (mean+sd),data=iris1)
booktabs()
latex(tabular((Species) ~ All(iris1) * (mean+sd),data=iris1))
tabular((Species) ~ All(iris1) * (mean+sd),data=iris1)
demno(package="rCharts")
library(devtools)
install_github("rCharts","ramnathv")
demo("rCharts")
library(rCharts)
d <- data.frame(d=LETTERS[1:5])
d <- data.frame(pos=LETTERS[1:5],val=(1:5)^2),
d <- data.frame(pos=LETTERS[1:5],val=(1:5)^2)
d
rPlot(val~pos,data=d,type="bar")
data("mtcars")
head(mtcars)
x <- runir(10000)
x <- runif(10000)
y <- sqrt(x)
mean(y)
mean(y^2)
var(y)
1/18
install.packages("xgboost")
data("iris")
dim(iris)
odd.n <- 2*(1:75)-1
odd.n
iris.train <- iris[odd.n,]
iris.test <- iris[-odd.n,]
library(xgboost)
y <- iris[,5]
y
as.integer(y)
y <- as.integer(y)-1
y
train.x <- iris[,1:4]
x <- rbind(train.x,iris.test[,-5]) # xgboost を使うときのため
x <- as.matrix(x)
class(x)
trind <- 1:length(y) # 先程定義したx の中の訓練データを指すのに使う
teind <- (nrow(train.x)+1):nrow(x) # 先程定義したx の中の検証用データを指す
set.seed(131)
param <- list("objective" = "multi:softprob", # 多クラスの分類で各クラスに所属する確率を求める
"eval_metric" = "mlogloss", # 損失関数の設定
"num_class" = 3 # class がいくつ存在するのか
)
k<-round(1+log2(nrow(train.x)))
k
cv.nround <- 100
bst.cv <- xgb.cv(param=param, data = x[trind,], label = y,  nfold = k, nrounds=cv.nround)
set.seed(131)
nround <- 27
bst <- xgboost(param=param, data = x[trind,], label = y, nrounds=nround)
pred <- predict(bst,x[teind,]) # モデルを使って予測値を算出
pred <- matrix(pred,3,length(pred)/3) # 今回は3クラスあるので
pred
pred <- t(pred)
colnames(pred)<-c("setosa","versicolor","virginica")
pred
library(Rcmdr)
library(wbstats)
library(data.table)
library(googleVis)
myDT <- data.table(
wb(indicator = c("SP.POP.TOTL",
"SP.DYN.LE00.In",
"SP.DYN.TFRT.IN"), mrv=60)
myDT <- data.table(
wb(indicator = c("SP.POP.TOTL",
"SP.DYN.LE00.In",
"SP.DYN.TFRT.IN"), mrv=60)
)
myDT <- data.table(
wb(indicator = c("SP.POP.TOTL",
"SP.DYN.LE00.IN",
"SP.DYN.TFRT.IN"), mrv=60)
)
countries <- data.table(wbcountries())
setkey(myDT, iso2c)
setkey(countries, iso2c)
class(countries)
colnames(countries)
head(countries)
class(myDT)
head(myDT)
myDT <- countries[myDT][! region %in% "Aggregates"]
head(myDT)
wDT <- reshape(
myDT[, list(
country, region, date, value, indicator)],
v.names = "value",
idvar=c("date", "country", "region"),
timevar="indicator", direction = "wide")
class(wDT)
head(wDT)
wDT[, date := as.integer(date)]
setnames(wDT, names(wDT),
c("Country", "Region",
"Year", "Population",
"Fertility", "LifeExpectancy"))
M <- gvisMotionChart(wDT, idvar = "Country",
timevar = "Year",
xvar = "LifeExpectancy",
yvar = "Fertility",
sizevar = "Population",
colorvar = "Region")
plot(M)
install.packages("RMeCab", repos = "http://rmecab.jp/R")
library(RMeCab)
RMeCabC("すももももももももである")
RMeCabDF(file="in.txt")
RMeCabDF("in.txt")
RMeCabText(file="in.txt")
library(RMeCab)
RMeCabC("私は西山です")
library(RMeCab)
RMeCabC("私は西山です")
RMeCabC("すももももももももという")
RMeCabText(file="in.txt")
ls()
getwd()
data0 <- read.csv(file=file.choose())
dim(data0)
head(data0)
syouhi <- data0$syouhi
plot(syouhi)
syouhi <- ts(syouhi,freq=12,start=c(2010,1))
plot(syouhi)
log.syouhi <- log(syouhi)
plot(log.syouhi)
diff(log,syouhi,12)
diff(log.syouhi,12)
ROC(syouhi)
dlog.syouhi <- diff(log.syouhi,12)
dlog.syouhi
log.syouhi
plot(dlog.syouhi)
nobi <- dlog.syouhi*100
plot(nobi)
nobi.sub <- window(nobi,end=c(2014,8))
plot(nobi.sub)
points(nobi[c(2,14,9)],col=2)
nobi[c(2014,9)]
nobi
nobi['2014-9']
heikin.sub <- mean(nobi.sub)
kekka1 <- ar(nobi.sub,order.max=1,aic=F)
kekka1
kekka2 <- ar(nobi.sub,order.max=2,aic=F)
kekka2
heikin.sub
predict(kekka2,n.ahead=1)
kekka.best <- ar(nobi.sub,order.max=12)
kekka.best
predict(kekka.best,n.ahead=1)
abline(h=heikin.sub)
lab.plot(nobi.sub,1,do.lines=F)
lag.plot(nobi.sub,1,do.lines=F)
lag.plot(nobi.sub,2,do.lines=F)
names(kekka2)
plot(kekka2$resid)
abline(h=0,lty=2)
predict(kekka2)
kekka2$resid
fitted(kekka2)
fitted.values(kekka2)
plot(kekka2)
pred <- nobi.sub-kekka2$resid
pred
ts.plot(nobi.sub,pred,lty=c(1,2),col=c(1,2))
data1 <- read.csv(file=file.choose())
dim(data1)
head(data1)
pas <- ts(data1$x,freq=12,start=c(1949,1))
plot(pas)
data2 <- read.csv(file=file.choose())
dim(data2)
head(data2)
elec <- ts(data2$elec,freq=12,start=c(1956,1))
plot(elec)
lag.plot(elec,1,do.lines=F)
plot(diff(log(elec),12))
dlog.elec <- diff(log(elec),12)
lag.plot(dlog.elec)
lag.plot(diff(dlog.elec))
plot(dlog.elec)
plot(diff(dlog.elec))
data0 <- read.csv(file=file.choose())
head(data0)
data0 <- read.csv(file=file.choose())
head(data0)
fvol <- data0[,3]
plot(fvol)
fvol <- ts(fvol)
plot(fvol)
fvol
sort(fvol)
sort(data0[,3])
View(varp)
install.packages("Quandl")
dir()
data0 <- read.csv(file="OECD-MEICLI-20161113.csv",skip=1)
dim(data0)
head(data0)
colnames(data0)
data0 <- read.csv(file="OECD-MEICLI-20161113.csv",skip=1,header=F)
colnames(data0)
head(data0)
library(dplyr)
data0 %>% filter(V3=="JPN"|V3=="USA") %>% select(V1,V3,V7,V15)
data0 %>% filter((V3=="JPN"|V3=="USA") & V1=="LOLITOTR_STSA") %>% select(V1,V3,V7,V15)
usjp <- data0 %>% filter((V3=="JPN"|V3=="USA") & V1=="LOLITOTR_STSA") %>% select(V1,V3,V7,V15)
usjp
as.Date(usjp$V7)
sapply(usjp,class)
as.Date(usjp$V7,format="%Y-%m")
usjp$V7 <- as.character(usjp$V7)
sapply(usjp,class)
usjp
usjp <- usjp[,2:4]
colnames(usjp) <- c("Country","Time","Value")
library(ggplot2)
ggplot(usjp,aes(x=Time,y=Value,colour=Country))+geom_line()
usjp
sapply(usjp,class)
ggplot(usjp,aes(x=Time,y=Value))+geom_line()
dir()
data0 <- read.csv(file="OECD-MEICLI-20161113.csv",skip=1,header=F)
colnames(data0)
head(data0,3)
library(dplyr)
library(zoo)
library(xts)
jpus <- data0 %>% filter(V3=="JPN"|V3=="USA")
as.xts(jpus)
as.zoo(jpus)
jpus <- as.zoo(jpus)
jpus.xts <- as.xts(jpus)
jpus
jpus <- data.frame(jpus[,7],jpus[,-7])
head(jpus)
jpus <- as.xts(as.zoo(jpus))
time <- jpus$V7
time()
time
jpus$V7
ls()
rm(jpus)
colnames(data0)
head(data0)
data1 <- data0 %>% filter(V3=="JPN"|V3=="USA")
head(data1)
jikan <- data1$V17
jikan
jikan <- data1$V7
jikan
jikan <- as.character(jikan)
jikan
strptime(jikan,"%Y-%m")
gsub("([0-9]+)-([0-9]+)", "\\1/\\2/1", jikan)
jikan <- gsub("([0-9]+)-([0-9]+)", "\\1/\\2/1", jikan)
as.Date(jikan)
data1$jikan <- as.Date(jikan)
head(jikan)
head(data1)
data2 <- data1 %>% select(jikan,V3,Value)
data2 <- data1 %>% select(jikan,V3,V15)
head(data2)
search()
library(ggplot2)
ggplot(data2,aes(x=jikan,y=V15,colour=V3))+geom_line()
unique(data2$V1)
head(data2)
head(data1)
unique(data1$V1)
data2 <- data1 %>% filter(V1=="LOLITOTR_STSA")
head(data2)
ggplot(data2,aes(x=jikan,y=V15,colour=V3))+geom_line()
rnorm(5,mean=170,sd=10)
varp(rnorm(5,mean=170,sd=10))
replicate(1000,varp(rnorm(5,mean=170,sd=10))) -> jikken1
replicate(1000,var(rnorm(5,mean=170,sd=10))) -> jikken2
hist(jikken1,br="FD")
hist(jikken2,br="FD")
mean(jikken1); var(jikken1)
mean(jikken2); var(jikken2)
par(mfrow=c(2,1))
hist(jikken1,br="FD",xlim=c(0,600))
hist(jikken2,br="FD",xlim=c(0,600))
rnorm(6,mean=170,sd=10)
var(rnorm(6,mean=170,sd=10))
jikken <- replicate(10000,var(rnorm(6,mean=170,sd=10)))
hist(jikken,br="FD")
mean(jikken); var(jikken)
par(mfrow=c(1,1))
hist(jikken,br="FD")
abline(v=144,lwd=3,col="grey")
sum(jikken > 144)
1-pchisq(7.2,df=5)
rnorm(10,mean=168,sd=10)
var(rnorm(10,mean=168,sd=10))
jikken <- replicate(10000,var(rnorm(10,mean=168,sd=10)))
hist(jikken)
mean(jikken)
var(jikken)
sample(5,c(-10,10),rep=T)
sample(c(-10,10),5,rep=T)
sample(c(-10,10),5,rep=T)
sample(c(-10,10),5,rep=T)
sample(c(-10,10),5,rep=T)
sum(sample(c(-10,10),5,rep=T))
sum(sample(c(-10,10),5,rep=T))
jikken <- replicate(10000,sum(sample(c(-10,10),100,rep=T)))
hist(jikken)
sum(jikken >= 200)/10000
var(jikken)
sd(jikken)
jikken400 <- replicate(10000,sum(sample(c(-10,10),400,rep=T)))
hist(jikken400)
sd(jikken)
sd(jikken400)
sum(jikken400 >= 200)/10000
rnorm(9,mean=55,sd=18)
mean(rnorm(9,mean=55,sd=18))
jikken <- replicate(10000,mean(rnorm(9,mean=55,sd=18)))
hist(jikken)
mean(jikken); sd(jikken)
max(jikken)
sum(jikken > 73)/10000
sum((jikken >= 49) & (jikken <= 61))/10000
rnorm(10,mean=168,sd=10)
var(rnorm(10,mean=168,sd=10))
jikken <- replicate(10000,var(rnorm(10,mean=168,sd=10)))
hist(jikken)
mean(jikken); var(jikken)
install.packages("MTS")
rnorm(5,mean=714.8,sd=7.2)
mean(rnorm(5,mean=714.8,sd=7.2))
jikken <- replicate(10000,mean(rnorm(5,mean=714.8,sd=7.2)))
hist(jikken,br="FD")
jikken <- replicate(10000,mean(rnorm(5,mean=710,sd=7.2)))
hist(jikken,br="FD")
install.packages("rstan")
Sys.getenv('PATH')
system('g++ -v')
system('where make')
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
install.packages("BH",dep=T)
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
install.packages("C:/Users/nisiy/Downloads/BH_1.62.0-1.zip", repos = NULL, type = "win.binary")
install.packages("BH")
dir()
library(rstan)
schools_dat <- list(J = 8,
y = c(28,  8, -3,  7, -1,  1, 18, 12),
sigma = c(15, 10, 16, 11,  9, 11, 10, 18))
fit <- stan(file = '8schools.stan', data = schools_dat,
iter = 1000, chains = 4)
print(fit)
plot(fit)
pairs(fit, pars = c("mu", "tau", "lp__"))
la <- extract(fit, permuted = TRUE) # arraysのlistを返す
mu <- la$mu
a <- extract(fit, permuted = FALSE)
a2 <- as.array(fit)
m <- as.matrix(fit)
print(fit, digits = 1)
dir()
install.packages("ggfortify")
data("AirPassengers")
library(ggfortify)
autoplot(AirPassengers)
class(AirPassengers)
autoplot(AirPassengers,ts.colour='red',ts.linetype = 'dashed')
install.packages("vars")
library(strucchange)
data("Nile")
ls()
plot(Nile)
autoplot(breakpoints(Nile~1),ts.colour='blue',ts.linetype='dashed',cpt.colour='blue',cpt.linetype='solid')
install.packages("changepoint")
install.packages("rstan",dep=T)
library(rstan)
getwd()
system('g++ -v')
install.packages("ggmcmc")
dir()
getwd()
data0 <- read.csv(file="data-salary.txt")
head(data0)
summary(lm(Y~X,data=data0))
library(rstan)
rdata <- list(N=nrow(data0),X=data0$X,Y=data0$Y)
rdata
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
fit <- stan(file="model4_5.stan",data=rdata,seed=1234)
save.image(file="kekka_model4_5.RData")
dir()
fit
plot(fit)
write.table(data.frame(summary(fit)$summary),file="fit-summary.txt",sep="\t",quote=F,col.names=NA)
dir()
library(ggmcmc)
ggmcmc(ggs(fit,inc_warmup=T,stan_include_auxiliar = T),file="fit_traceplot.pdf",plot="traceplot")
ggmcmc(ggs(fit),file="fit_ggmcmc.pdf",plot=c("traceplot","density","running","autocorrelation"))
x <- c(3,3,3)
y <- c(1,2,4)
x <- c(3,3,3,3)
y <- c(1,3,5,7)
x == y
x
y
data.frame(x,y)
x == y
x > y
x >= y
x != y
(y >2) & (y < 7)
(y < 2) | (y > 5)
install.packages("forecast")
install.packages("dplyr")
install.packages("BH")
install.packages("C:/Users/nisiy/Desktop/BH_1.62.0-1.zip", repos = NULL)
library(dplyr)
library(dplyr)
data(iris)
head(iris)
iris %>% group_by(Species) %>% summarise(AvgPetalLength=mean(Petal.Length))
setwd("C:/Users/nisiy/Dropbox/1.Rmarkdown-Documentation/Forecast-Lecture/forecast-lesson-m6-2015")
dir()
